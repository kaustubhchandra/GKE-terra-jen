steps:
  # Step 1: Set up the Google Cloud SDK
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Authenticate using Google Cloud service account
        echo $GOOGLE_CREDENTIALS | base64 --decode > tf-modules/gke-cluster/gke-sa.json
        gcloud auth activate-service-account --key-file=tf-modules/gke-cluster/gke-sa.json
        gcloud config set project $PROJECT_ID

  # Step 2: Install Terraform
  - name: 'hashicorp/terraform:latest'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
        sudo apt update && sudo apt install terraform

  # Step 3: Initialize Terraform (downloads modules and provider plugins)
  - name: 'hashicorp/terraform:latest'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd tf-modules/gke-cluster/
        terraform init

  # Step 4: Plan Terraform deployment
  - name: 'hashicorp/terraform:latest'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd tf-modules/gke-cluster/
        terraform plan -out=tfplan

  # Step 5: Apply Terraform deployment
  - name: 'hashicorp/terraform:latest'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd tf-modules/gke-cluster/
        terraform apply -auto-approve tfplan

  # Optional Step: Clean up after apply
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Destroy resources if desired after apply (comment out if not needed)
        # cd tf-modules/gke-cluster/
        # terraform destroy -auto-approve

timeout: '1200s'  # Maximum duration for the build (20 minutes)

options:
  logging: NONE  # Disable logging completely

# Define available substitutions for project and credentials
substitutions:
  _PROJECT_ID: "a-sysops"
  _GOOGLE_CREDENTIALS: "ew0KICAgICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsDQogICAgInByb2plY3RfaWQiOiAiYS1zeXNvcHMiLA0KICAgICJwcml2YXRlX2tleV9pZCI6ICI4MDRiYjVhOTFmZGU1NGQyNzk1MzhhOTBkNjRjYTg1YjJiYjJkNjE5IiwNCiAgICAicHJpdmF0ZV9rZXkiOiAiLS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tXG5NSUlFdmdJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLZ3dnZ1NrQWdFQUFvSUJBUUNKanRUUWFvaXdsQzVqXG40d0p5QXdkMVlXNTlRYVFKMUhKTzhRSlB1dTBacTFZc1R4NFJ2K1ZFaUZCdWhJNVdvUWdZcDBpS0hrS3cyVkVFXG5MVFU5ZjV3RXlCYUQzM3ZjQXhvMVhpZG9mYnFTZzNhMFdFOFVtOFp1bE5mU1V3aFZ0ckxJU3d3MjUyQ3J5Z2sxXG54UjlEVDE5bHl2OUk2MW52N25UcUh6SUxEamt4Y1Q4RDVYZTJuMlNCaTZnMENoTlphcWNCdDhYalIrMmd4VHlYXG5sQktkUXMxWjI3M3V3Nm1oZkVwcXZvREhEV01pTTYxaDdaYTk5ZzAwSExXTEQ0TGU3R1hFcGRZMXIxU2h4em1UXG5GRmJ5TU9ENWMraC8xTlRzNFdsSldtODBIT3Mwb0RWS3FyYjRvZWtIWnpDSHNmQVQyaWt5WkFPUjNqTjVNYUp0XG56WE0xYnNkVkFnTUJBQUVDZ2dFQUtReklRbmdBV1oybTZHVVcxanBFTUFuRzVMZEJnak4xZDB4aDhiUXBUSGMrXG5qSk9CdUM5SmRuV3Rkd1cweW5KY3phcWlNYUdOS21SMzBtVEJWaHh1VFZqK3F4VDJ5L1hiRE9FUHBwV2FwMTEyXG4vNk80MmNBUTYvQWNKZVprZnR1Nko1Nkp3eHF5VlNIQ05Oc2lGTDZyaTkrVDVrbGh1Z0d4dnlwWEQwaUwxYzV6XG5ReHc1WmNhOExLTFJlSGVZSEFKSjgrWTVOYm9wWkVCYWtzaEJocUtYdlh3dmpSdDd2bEZ0b2tkSmQ2ajROMUpKXG55ZjI5K3hSb0RXTWJJL05qQlpZa2dVeGpyVVZxdzZMVVUwblNaUWhYVnNoRFN0cXhTa05LRm1yL2Z3SUZRQnc1XG50NTdtV1M3a1dYYzhPa3NLOHdQRWE5L2RlMk5ndk1kSU1vTFBEa3EzZ3dLQmdRREFqMVFZOWdDa3FDRitLaUxWXG5KdE45clNycnFjNndxZFIwcERsdzFuOFA3cVlhU0dCNkFyRURYMTZUK1BTaXJmbTN6UDMrUlpBNXA1dDVwc3E5XG5lRkpLM1RsMm5QeFViM1lPSzYwTnpOeUozZDBoam1rdCt4cFVRUitMaFZQbWdpWm1ib1h6ZDRRWUhJQTZFTDUwXG5BRm9EbGt4ZVhBN2tocGw3REJKdG9SSDB3d0tCZ1FDMjRKY0xXOGhYbi8yZUEvSlpOcFdKOFRST2JackpCa2p2XG5jSzdHUWpLendFZWt2dUphZjNZNmVjZXdqZVpIcFc0Z1laSm5qTnU1Qk5lUTY4Z2VmdHlGUTY0bUpwQXJPbHBWXG5NT0loR1o0aWRiSk50L29hdkZhYTZQSGJaMHZPYTEzbzZRZGZFc0U5U2M2cWVQbjVWSExJZzd4REcxZ3RvRUVBXG42RlpqVlNFeUJ3S0JnQlhjTDUvbHpZemp5V21aUHZzVHZVNjNLZmcyL3MvdmQ3OEdKYjg1bXBNa2RKYm5RSXlaXG5ZWjhRWkp4SDF2M2c0a2lMYlFwQXUyN1FLRVpYT1F6cGErNHp6eUk0RUMxRnVoRkJ4Qk9jL2l4b2s0SUx1TVVQXG5qSjJrQndDLzBoYUpEL0x3K1NQNm5YUmZSKzlQbDA5eitzUU5lLzM2VlhaOEVWQjJ2bURUdUVZaEFvR0JBTFhUXG5SMW83djAyZi9RR0cyd1pvaHZYSHBFSDJKOWVITUMwZzFDUzYzTDVyaHMvK0dmL3dpeFJJMElweUMydGd4OFhhXG5QVDVIaG83R2lhM0ZRQXRTQnQ5WkUyVkxJanhZb0VmamVuRitqd09rRWN2RUNCOWM4cDdDelBWZ0ZyYjllVG1CXG50NXFIZ3luMG9FNU9TZnZrUXR1cVh4dzVxOHB4Y3kvNzBTaWlFNGN4QW9HQkFKTGRqZDM4M0FRWmxITVliYzg0XG5FbHk0UkhXbTVLdXNQYkMwSUNIaFZuTGtyT1pjMzhMTHRjRGJodVFoeGJ2WmlXdnpWNXU2Sno0anpEWFV0SklQXG5jd0s3ejlJMnlHQjVMT0JkT0F5YzRoMXd6UFZQVHhrb3VTYnUwZ2tnZWRMVGNROVV2RXRJc1RvY3AvRlM1MjREXG5NaFV6OFdyUEs2ckJ1Z29zSGRKT1NrQW1cbi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS1cbiIsDQogICAgImNsaWVudF9lbWFpbCI6ICJna2UtY2x1c3Rlci1zYUBhLXN5c29wcy5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbSIsDQogICAgImNsaWVudF9pZCI6ICIxMDc4MzcyMzQzODc2NzE5MzY4NDciLA0KICAgICJhdXRoX3VyaSI6ICJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvYXV0aCIsDQogICAgInRva2VuX3VyaSI6ICJodHRwczovL29hdXRoMi5nb29nbGVhcGlzLmNvbS90b2tlbiIsDQogICAgImF1dGhfcHJvdmlkZXJfeDUwOV9jZXJ0X3VybCI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9vYXV0aDIvdjEvY2VydHMiLA0KICAgICJjbGllbnRfeDUwOV9jZXJ0X3VybCI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9yb2JvdC92MS9tZXRhZGF0YS94NTA5L2drZS1jbHVzdGVyLXNhJTQwYS1zeXNvcHMuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLA0KICAgICJ1bml2ZXJzZV9kb21haW4iOiAiZ29vZ2xlYXBpcy5jb20iDQogIH0="
